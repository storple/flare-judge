upstream app_server {
  server web:8000 fail_timeout=0;
}

server {
  # if no Host match, close the connection to prevent host spoofing
  listen 80 default_server;

  listen 443 ssl default_server;
  ssl_certificate /etc/ssl/${DOMAIN_NAME}.pem;
  ssl_certificate_key /etc/ssl/${DOMAIN_NAME}.key;

  return 444;
}

server {
  listen 80;

  server_name ${DOMAIN_NAME} www.${DOMAIN_NAME};

  # redirect all traffic on http into https
  return 301 https://${DOMAIN_NAME}$request_uri;
}

server {
  listen 443 ssl;
  ssl_certificate /etc/ssl/${DOMAIN_NAME}.pem;
  ssl_certificate_key /etc/ssl/${DOMAIN_NAME}.key;

  server_name ${DOMAIN_NAME} www.${DOMAIN_NAME};

  client_max_body_size 100M;

  keepalive_timeout 5;

  location / {
    proxy_pass http://app_server;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
  }
}
